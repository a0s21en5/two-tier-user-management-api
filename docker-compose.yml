services:
  two-tier-web-app:
    container_name: two-tier-web-app
    build:
      context: ./two-tier-web-app
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver2022;Database=TwoTierWebAppDB;User=sa;Password=Obito#9775;TrustServerCertificate=True;MultipleActiveResultSets=true;
    depends_on:
      sqlserver2022:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/api/users || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - two-tier

  sqlserver2022:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver2022
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Obito#9775
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - two-tier:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'Obito#9775' -Q 'SELECT 1' -C || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - two-tier

networks:
  two-tier:

volumes:
  two-tier:
    external: true
